# Generated by Django 4.2.11 on 2024-05-08 04:58

from django.conf import settings
from django.db import migrations, models
import site1.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_user', models.CharField(default='NO DATA', max_length=100, primary_key=True, serialize=False)),
                ('role', models.IntegerField(default=1)),
                ('first_name', models.CharField(blank=True, default='first name example', max_length=255)),
                ('last_name', models.CharField(blank=True, default='last name example', max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name_user', models.CharField(default='NO DATA', max_length=255)),
                ('department', models.CharField(blank=True, default='NO DATA', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name_user'],
            },
            managers=[
                ('objects', site1.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CLOs1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True)),
                ('content', models.CharField(blank=True, max_length=255)),
                ('PLO', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CLOs2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField()),
                ('a', models.CharField(blank=True, max_length=1)),
                ('b', models.CharField(blank=True, max_length=1)),
                ('c', models.CharField(blank=True, max_length=1)),
                ('d', models.CharField(blank=True, max_length=1)),
                ('e', models.CharField(blank=True, max_length=1)),
                ('f', models.CharField(blank=True, max_length=1)),
                ('g', models.CharField(blank=True, max_length=1)),
                ('h', models.CharField(blank=True, max_length=1)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CLOs3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True)),
                ('exam', models.CharField(blank=True, max_length=255)),
                ('method', models.CharField(blank=True, max_length=255)),
                ('point', models.CharField(blank=True, max_length=255)),
                ('criteria', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CLOs4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True)),
                ('method', models.CharField(blank=True, max_length=255)),
                ('exam', models.CharField(blank=True, max_length=255)),
                ('criteria', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('number_session', models.CharField(blank=True, max_length=255)),
                ('CLOs', models.CharField(blank=True, max_length=255)),
                ('method', models.CharField(blank=True, max_length=255)),
                ('self_study', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id_course_main', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('number_credit', models.CharField(blank=True, max_length=255)),
                ('document', models.TextField(blank=True)),
                ('target', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('time_update', models.CharField(blank=True, max_length=255)),
                ('CLOs1', models.ManyToManyField(blank=True, to='site1.clos1')),
                ('CLOs2', models.ManyToManyField(blank=True, to='site1.clos2')),
                ('CLOs3', models.ManyToManyField(blank=True, to='site1.clos3')),
                ('CLOs4', models.ManyToManyField(blank=True, to='site1.clos4')),
                ('content', models.ManyToManyField(blank=True, to='site1.content')),
                ('head_department', models.ManyToManyField(blank=True, related_name='courses_as_head_department', to=settings.AUTH_USER_MODEL)),
                ('primary_teacher', models.ManyToManyField(blank=True, related_name='courses_as_primary_teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SubjectPre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CurriculumCourse',
            fields=[
                ('id_curriculumCourse', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('mandatory', models.BooleanField(default=False)),
                ('is_confirm', models.BooleanField(default=False)),
                ('semester', models.IntegerField(default=1)),
                ('id_course', models.ManyToManyField(blank=True, to='site1.course')),
                ('teacher', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id_curriculumCourse'],
            },
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id_curriculum', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('year', models.CharField(max_length=255)),
                ('department', models.CharField(blank=True, max_length=255)),
                ('note', models.TextField(blank=True)),
                ('curriculum_course', models.ManyToManyField(blank=True, related_name='curriculum_course_ids', to='site1.curriculumcourse')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='subject_pre',
            field=models.ManyToManyField(blank=True, related_name='subject_pre_course', to='site1.subjectpre'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject_similar',
            field=models.ManyToManyField(blank=True, related_name='subject_simiar_course', to='site1.subjectpre'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ManyToManyField(blank=True, related_name='courses_as_teacher', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='Curriculum',
            field=models.ManyToManyField(blank=True, related_name='Curriculum_users', to='site1.curriculum'),
        ),
        migrations.AddField(
            model_name='user',
            name='courses',
            field=models.ManyToManyField(blank=True, related_name='Course_user', to='site1.course'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
